/* ========================================================================
 * Copyright 2014 Arquidalgos
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 Arquidalgos

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.Arquidalgos.entidad.master.persistence.entity;

import co.edu.uniandes.csw.Arquidalgos.sede.persistence.entity.SedeEntity;
import co.edu.uniandes.csw.Arquidalgos.entidad.persistence.entity.EntidadEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(EntidadsedeEntidadEntityId.class)
@NamedQueries({
    @NamedQuery(name = "EntidadsedeEntidadEntity.getByMasterId", query = "SELECT  u FROM EntidadsedeEntidadEntity u WHERE u.entidadId=:entidadId"),
    @NamedQuery(name = "EntidadsedeEntidadEntity.deleteEntidadsedeEntidadEntity", query = "DELETE FROM EntidadsedeEntidadEntity u WHERE u.entidadId=:entidadId and  u.sedeEntidadId=:sedeEntidadId")
})
public class EntidadsedeEntidadEntity implements Serializable {

    @Id
    @Column(name = "entidadId")
    private Long entidadId;
    @Id
    @Column(name = "sedeEntidadId")
    private Long sedeEntidadId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "entidadId", referencedColumnName = "id")
    @JoinFetch
    private SedeEntity entidadIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "sedeEntidadId", referencedColumnName = "id")
    @JoinFetch
    private SedeEntity sedeEntidadIdEntity; 

    public EntidadsedeEntidadEntity() {
    }

    public EntidadsedeEntidadEntity(Long entidadId, Long sedeEntidadId) {
        this.entidadId =entidadId;
        this.sedeEntidadId = sedeEntidadId;
    }

    public Long getEntidadId() {
        return entidadId;
    }

    public void setEntidadId(Long entidadId) {
        this.entidadId = entidadId;
    }

    public Long getSedeEntidadId() {
        return sedeEntidadId;
    }

    public void setSedeEntidadId(Long sedeEntidadId) {
        this.sedeEntidadId = sedeEntidadId;
    }

    public SedeEntity getEntidadIdEntity() {
        return entidadIdEntity;
    }

    public void setEntidadIdEntity(SedeEntity entidadIdEntity) {
        this.entidadIdEntity = entidadIdEntity;
    }

    public SedeEntity getSedeEntidadIdEntity() {
        return sedeEntidadIdEntity;
    }

    public void setSedeEntidadIdEntity(SedeEntity sedeEntidadIdEntity) {
        this.sedeEntidadIdEntity = sedeEntidadIdEntity;
    }

}
